############################################################################################
#set( $foreign_table = '' )
#set( $foreign_table_cap = '' )
#set( $cpt = 0 )
#set( $check_fk = false )
#set( $list = "" )
#set( $select = "" )
############################################################################################
from bottle import view, request, route, template
import datetime

from services import ${entity.name}_service as commons_entity_service
from serializer.${entity.name}_serializer import ${entity.name}JsonSerializer
from entities.$entity.name import $entity.name

from controllers.commons import common_controller

${entity.name.toLowerCase()}_service = commons_entity_service.${entity.name}Service()
json_serializer = ${entity.name}JsonSerializer()

#if( $entity.hasCompositePrimaryKey() )
#foreach( $field in $entity.attributes )
#if( $field.isFK() )
#set( $check_fk = true )
#set( $foreign_table_cap = $field.referencedEntityName )
#set( $foreign_table = $fn.toLowerCase($field.referencedEntityName) )
from controllers.${foreign_table_cap}_controller import ${foreign_table}_service
from serializer.${foreign_table_cap}_serializer import ${foreign_table_cap}JsonSerializer
${foreign_table}_json_serializer = ${foreign_table_cap}JsonSerializer()
list_${foreign_table} = common_controller.list_foreign_keys(${foreign_table}_service, ${foreign_table}_json_serializer)

#set( $list = $list + "list_" + $foreign_table + "=list_" + $foreign_table + ", ")
#set( $select = $select + "select_" + $foreign_table + "=select_" + $foreign_table + ", ")
#end
#end
#end

#foreach( $field in $entity.nonKeyAttributes )
#if( $field.isFK() )
#set( $check_fk = true )
#set( $cpt = $cpt + 1 )
#set( $foreign_table_cap = $field.referencedEntityName )
#set( $foreign_table = $fn.toLowerCase($field.referencedEntityName) )
from controllers.${foreign_table_cap}_controller import ${foreign_table}_service
from serializer.${foreign_table_cap}_serializer import ${foreign_table_cap}JsonSerializer
${foreign_table}_json_serializer = ${foreign_table_cap}JsonSerializer()
list_${foreign_table} = common_controller.list_foreign_keys(${foreign_table}_service, ${foreign_table}_json_serializer)

#set( $list = $list + "list_" + $foreign_table + "=list_" + $foreign_table + ", ")
#set( $select = $select + "select_" + $foreign_table + "=select_" + $foreign_table + ", ")
#end
#end
#set( $select = $list + $select)

@route('/${entity.name.toLowerCase()}')
@view("navigation_bar.tpl")
def get_all():
    try:
        entities = ${entity.name.toLowerCase()}_service.find_all()
        return common_controller.get_all(json_serializer, entities, "${entity.name}", "")
    except Exception as e:
        return common_controller.answer(e, "danger")


@route('/${entity.name.toLowerCase()}/form')
@view("navigation_bar.tpl")
def form_for_create():
    body = template('${entity.name}_form.tpl'#if($check_fk), $list#else,#end form="Create", message="")
    return {"body": body}


@route('/${entity.name.toLowerCase()}/form/$entity.keyAttributesNamesAsString('/', '<', '>')')
@view("navigation_bar.tpl")
def form_for_update($entity.keyAttributesNamesAsString(', ')):
    entity = ${entity.name.toLowerCase()}_service.find_by_id($entity.keyAttributesNamesAsString(', '))
#foreach( $attribute in $entity.attributes )
#if( $attribute.isFK() )
#set( $foreign_key = $fn.toLowerCase($attribute.referencedEntityName) )
    select_${foreign_key} = ${foreign_key}_service.find_by_id(entity.$attribute.name).to_dict()
#end
#end
    body = template('${entity.name}_form.tpl'#if($check_fk), $select#else, #end entity=entity.to_dict(), form="Update", message="")
    return {"body": body}


@route('/${entity.name.toLowerCase()}/create', method='POST')
@view("navigation_bar.tpl")
def create():
    entity = ${entity.name}()
#foreach( $field in $entity.attributes )
#if( $field.isTemporalType() )
    date_convert = request.forms.get('${field.name}')
    if date_convert:
        entity.${field.name} = datetime.datetime.strptime(date_convert, "%Y-%m-%d")
    else:
        entity.${field.name} = date_convert
#else
    entity.${field.name} = request.forms.get('${field.name}')
#end
#end
    result = ${entity.name.toLowerCase()}_service.insert(entity)
    message = common_controller.create(result, ${entity.name})
#if( $entity.hasCompositePrimaryKey() )
#foreach( $attribute in $entity.keyAttributes )
#set( $foreign_key = $fn.toLowerCase($attribute.referencedEntityName) )
    select_${foreign_key} = ${foreign_key}_service.find_by_id(entity.$attribute.name).to_dict()
#end
#end
#foreach( $attribute in $entity.nonKeyAttributes )
#if( $attribute.isFK() )
#set( $foreign_key = $fn.toLowerCase($attribute.referencedEntityName) )
    select_${foreign_key} = ${foreign_key}_service.find_by_id(entity.$attribute.name).to_dict()
#end
#end
    body = template('${entity.name}_form.tpl'#if($check_fk), $select#else, #end form="Update", entity=entity.to_dict(), message=message)
    return {"body": body}


@route('/${entity.name.toLowerCase()}/update/$entity.keyAttributesNamesAsString('/', '<', '>')', method='POST')
@view('navigation_bar.tpl')
def update($entity.keyAttributesNamesAsString(', ')):
    entity = ${entity.name}()
#foreach( $field in $entity.keyAttributes )
    entity.${field.name} = ${field.name}
#end
#foreach( $field in $entity.nonKeyAttributes )
#if( $field.isTemporalType() )
    date_convert = request.forms.get('${field.name}')
    if date_convert:
        entity.${field.name} = datetime.datetime.strptime(date_convert, "%Y-%m-%d")
    else:
        entity.${field.name} = date_convert
#else
    entity.${field.name} = request.forms.get('${field.name}')
#end
#end
    result = ${entity.name.toLowerCase()}_service.update(entity)
    message = common_controller.update(result)
#if( $entity.hasCompositePrimaryKey() )
#foreach( $attribute in $entity.keyAttributes )
#set( $foreign_key = $fn.toLowerCase($attribute.referencedEntityName) )
    select_${foreign_key} = ${foreign_key}_service.find_by_id(entity.$attribute.name).to_dict()
#end
#end
#foreach( $attribute in $entity.nonKeyAttributes )
#if( $attribute.isFK() )
#set( $foreign_key = $fn.toLowerCase($attribute.referencedEntityName) )
    select_${foreign_key} = ${foreign_key}_service.find_by_id(entity.$attribute.name).to_dict()
#end
#end
    body = template('${entity.name}_form.tpl'#if($check_fk), $select#else, #end form="Update", entity=entity.to_dict(), message=message)
    return {"body": body}


@route('/${entity.name.toLowerCase()}/delete/$entity.keyAttributesNamesAsString('/', '<', '>')')
@view('navigation_bar.tpl')
def delete($entity.keyAttributesNamesAsString(', ')):
    entities = ${entity.name.toLowerCase()}_service.find_all()
    try:
        result = ${entity.name.toLowerCase()}_service.delete_by_id($entity.keyAttributesNamesAsString(', '))
        message = common_controller.delete(result)
        list = [json_serializer.to_json(entity) for entity in entities]
        output = template('${entity.name}.tpl', list=list, footer=message)
        return {"body": output}  
    except Exception as e:
        message = common_controller.answer(e, "danger")
        list = [json_serializer.to_json(entity) for entity in entities]
        output = template('${entity.name}.tpl', list=list, footer=message)
        return {"body": output}  
